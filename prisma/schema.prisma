// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid()) @map("_id")
  firstName     String
  lastName      String   @unique
  email         String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userSignature String
}

model VerificationRequest {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Valve {
  id              String            @id @default(cuid()) @map("_id")
  firma           String
  type            String
  serialNumber    String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  userId          String
  userSignature   String
  firstName       String
  lastName        String
  description     String?
  clientEmailPerm Boolean
  clientEmail     String?
  infoBlocks      ValvesInfoBlock[]
}

model ValvesInfoBlock {
  id                String  @id @default(cuid()) @map("_id")
  valveLocation     String
  valveType         String
  valveSerialNumber String
  pressureOpen      Float
  pressureClose     Float
  pressureSetting   Float
  description       String?
  Valve             Valve?  @relation(fields: [valveId], references: [id])
  valveId           String?
}

model Humidifier {
  id                   String               @id @default(cuid()) @map("_id")
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  firma                String
  type                 String
  serialNumber         String
  userId               String
  userSingature        String
  protectionType       String
  ratedCurrent         String
  description          String?
  nameplateVoltage     String
  nameplatePhase       String
  nameplateCurrentDraw String
  cylinders            Cylinder[]
  materials            HumidifierMaterial[]
}

model Cylinder {
  id             String     @id @default(cuid()) @map("_id")
  humidifier     Humidifier @relation(fields: [cylinderId], references: [id])
  cylinderId     String
  cylinderNumber String
  voltage1       String
  voltage2       String
  voltage3       String
  amper1         String
  amper2         String
  amper3         String
}

model HumidifierMaterial {
  id                 String     @id @default(cuid()) @map("_id")
  materialDecription String
  materialAmount     String
  materialId         String
  humidifier         Humidifier @relation(fields: [materialId], references: [id])
}

model Firma {
  id           String   @id @default(cuid()) @map("_id")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  fullName     String
  shortName    String
  street       String
  houseNumber  Float
  localNumber  Float?
  postCode     String
  city         String
  tel          String?
  contactEmail String?
}

model Circuit {
  id                      String  @id @default(cuid()) @map("_id")
  dischargePressure       Float
  condensationTemperature Float
  subcooling              Float
  airTemperature          Float
  suctionPressure         Float
  suctionTemperature      Float
  overHeat                Float
  inTemperature           Float
  outTemperature          Float
  inWaterPressure         Float
  outWaterPressure        Float
  circuitId               String
  editKey                 String
  Chiller                 Chiller @relation(fields: [circuitId], references: [id])
}

model PowerConsumption {
  id                 String  @id @default(cuid()) @map("_id")
  deviceType         String
  amperage_1         Float
  amperage_2         Float
  amperage_3         Float
  interphase         Float?
  interphaseOk       String
  powerConsumptionId String
  editKey            String
  Chiller            Chiller @relation(fields: [powerConsumptionId], references: [id])
}

model Chiller {
  id                       String             @id @default(cuid()) @map("_id")
  createdAt                DateTime           @default(now())
  updatedAt                DateTime           @updatedAt
  userSignature            String
  firstName                String
  userId                   String
  lastName                 String
  firma                    String
  description              String?
  type                     String
  serialNumber             String
  pollution                String
  termalInsulation         String
  termalAndPressureControl String
  supplyVoltage            Float
  supplyPhase              Float
  measuredVoltage_1        Float
  measuredVoltage_2        Float
  measuredVoltage_3        Float
  interphase               Float?
  interphaseOK             String
  freonType                String
  freonAmount              Float
  refrigerationCircuits    Float[]
  driverType               String
  refrigerant              String
  airTemperature           Float
  oilLevel                 String
  indicatorColor           String
  tightSystem              String
  currentConsumption       String
  fansConsumption          String
  highPressure             String
  lowPressure              String
  antiFrezzeTermostat      String
  settingsTemperature      Float[]
  controlledParameter      String
  controlMethod            String
  leakGasTest              String
  gasAdded                 Float
  gasRegain                Float
  circuits                 Circuit[]
  powerConsumptions        PowerConsumption[]
}
